{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/utils.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const popupIsOpen = \"popup_is-opened\";\r\n\r\n// Закрытие модального окна нажатием на Esc\r\nconst closePopupEsc = (e) => {\r\n  if (e.key === \"Escape\") {\r\n    const popup = document.querySelector(`.${popupIsOpen}`);\r\n    closePopup(popup);\r\n  }\r\n  return;\r\n};\r\n\r\n// Открытие модального окна\r\nconst openPopup = (popup) => {\r\n  popup.classList.add(popupIsOpen);\r\n  document.addEventListener(\"keydown\", closePopupEsc);\r\n};\r\n\r\n// Закрытие модального окна\r\nconst closePopup = (popup) => {\r\n  popup.classList.remove(popupIsOpen);\r\n  document.removeEventListener(\"keydown\", closePopupEsc);\r\n};\r\n\r\n// Логика обработки событий модального окна\r\nconst setPopupEventListeners = (popup) => {\r\n// Добавить класс анимации на модальные окна\r\n  popup.classList.add(\"popup_is-animated\");\r\n  popup.addEventListener(\"click\", (e) => {\r\n    if (\r\n      e.target.classList.contains(\"popup__close\") ||\r\n      e.target === e.currentTarget\r\n    ) {\r\n      closePopup(popup);\r\n    }\r\n  });\r\n};\r\n\r\nexport { openPopup, closePopup, setPopupEventListeners };\r\n","const BASE_URL = \"https://nomoreparties.co/v1/\";\r\nconst COHORT_ID = \"wff-cohort-38\";\r\nconst TOKEN = \"9503a300-d1d2-40fa-93bf-3f548ff8c496\";\r\n\r\nconst config = {\r\n  baseUrl: `${BASE_URL}${COHORT_ID}`,\r\n  headers: {\r\n    authorization: TOKEN,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst { baseUrl, headers } = config;\r\n\r\nconst checkResponseStatus = (res) => {\r\n  if(res.ok) {\r\n    return res.json()\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`)\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${baseUrl}/cards`, {\r\n    headers,\r\n  }).then(checkResponseStatus);\r\n};\r\n\r\nexport const getProfileInfo = () => {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    headers,\r\n  }).then(checkResponseStatus);\r\n};\r\n\r\nexport const updateProfileInfo = (name, about) => {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      about\r\n    })\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const updateProfileAvatar = (avatar) => {\r\n  return fetch(`${baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({\r\n      avatar,\r\n    })\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const uploadNewCard = (name, link) => {\r\n  return fetch(`${baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      link,\r\n    })\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const removeCard = (cardId) => {\r\n  return fetch(`${baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers,\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const likeCard = (cardId, isLiked) => {\r\n  return fetch(`${baseUrl}/cards/likes/${cardId}`, {\r\n    method: isLiked ? 'DELETE' : 'PUT',\r\n    headers,\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n","import { likeCard } from \"../components/api\";\r\n// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\nconst createCard = (\r\n  card,\r\n  userId,\r\n  handleDeleteCard,\r\n  handleLikeCard,\r\n  handleOpenCard\r\n) => {\r\n  const { name, link, likes, owner, _id } = card;\r\n\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const imageElement = cardElement.querySelector(\".card__image\");\r\n  const titleElement = cardElement.querySelector(\".card__title\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n  const totalCardLikes = cardElement.querySelector(\".card__like-number\");\r\n\r\n  imageElement.src = link;\r\n  imageElement.alt = name;\r\n  titleElement.textContent = name;\r\n  totalCardLikes.textContent = likes.length;\r\n\r\n  const isLiked = likes.some((user) => user._id === userId);\r\n  if (isLiked) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  if (userId !== owner._id) {\r\n    deleteButton.remove();\r\n  } else {\r\n    deleteButton.addEventListener(\"click\", () =>\r\n      handleDeleteCard(_id, cardElement)\r\n    );\r\n  }\r\n\r\n  likeButton.addEventListener(\"click\", () =>\r\n    handleLikeCard(_id, totalCardLikes, likeButton)\r\n  );\r\n\r\n  imageElement.addEventListener(\"click\", () => handleOpenCard(card));\r\n\r\n  return cardElement;\r\n};\r\n\r\n// Удаление карточки из разметки\r\nconst deleteCard = (card) => {\r\n  card.remove()\r\n}\r\n\r\n// @todo: Функция постановки лайка карточке\r\nconst toggleLike = (id, likes, button) => {\r\n  const isLiked = button.classList.contains(\"card__like-button_is-active\")\r\n  likeCard(id, isLiked).then((card) => {\r\n    likes.textContent = card.likes.length;\r\n    button.classList.toggle(\"card__like-button_is-active\");\r\n  })\r\n  .catch(err => console.log(err))\r\n};\r\n\r\n\r\nexport { createCard, toggleLike, deleteCard };\r\n","const showInputError = (formElement, inputElement, errorMessage, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(config.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.remove(config.errorClass);\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, config) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      config\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, config) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(config.inactiveButtonClass);\r\n    buttonElement.setAttribute(\"disabled\", true);\r\n  } else {\r\n    buttonElement.classList.remove(config.inactiveButtonClass);\r\n    buttonElement.removeAttribute(\"disabled\");\r\n  }\r\n};\r\n\r\nconst setEventListener = (formElement, config) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, config);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      checkInputValidity(formElement, inputElement, config);\r\n      toggleButtonState(inputList, buttonElement, config);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (config) => {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n    setEventListener(formElement, config);\r\n  });\r\n};\r\n\r\nexport const clearValidation = (formElement, config) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  formElement.reset();\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, config);\r\n    toggleButtonState(inputList, buttonElement, config);\r\n  });\r\n};\r\n","export const isLoading = (loading, button) => {\r\n  loading\r\n    ? (button.textContent = \"Сохранение...\")\r\n    : (button.textContent = \"Сохранение\");\r\n};","import \"./pages/index.css\";\r\nimport {\r\n  openPopup,\r\n  closePopup,\r\n  setPopupEventListeners,\r\n} from \"./components/modal\";\r\nimport { createCard, toggleLike, deleteCard } from \"./components/card\";\r\nimport { clearValidation, enableValidation } from \"./components/validation\";\r\nimport {\r\n  getInitialCards,\r\n  getProfileInfo,\r\n  updateProfileInfo,\r\n  uploadNewCard,\r\n  updateProfileAvatar,\r\n  removeCard,\r\n} from \"./components/api\";\r\nimport { isLoading } from \"./components/utils\";\r\n\r\n// @todo: DOM узлы\r\nconst popups = document.querySelectorAll(\".popup\");\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\n// Элементы модального окна для редактирования аватара\r\nconst editAvatarPopup = document.querySelector(\".popup_type_avatar\");\r\nconst editAvatarForm = editAvatarPopup.querySelector(\".popup__form\");\r\nconst avatarInput = editAvatarPopup.querySelector(\".popup__input_type_avatar\");\r\nconst saveAvatarButton = editAvatarPopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для редактирования профиля\r\nconst editProfilePopup = document.querySelector(\".popup_type_edit\");\r\nconst editProfileForm = editProfilePopup.querySelector(\".popup__form\");\r\nconst profileNameInput = editProfilePopup.querySelector(\r\n  \".popup__input_type_name\"\r\n);\r\nconst profileDescriptionInput = editProfilePopup.querySelector(\r\n  \".popup__input_type_description\"\r\n);\r\nconst saveProfileInfoButton = editProfilePopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для добавления новой карточки\r\nconst addCardPopup = document.querySelector(\".popup_type_new-card\");\r\nconst addCardForm = addCardPopup.querySelector(\".popup__form\");\r\nconst cardNameInput = addCardPopup.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nconst cardLinkInput = addCardPopup.querySelector(\".popup__input_type_url\");\r\nconst saveCardButton = addCardPopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для просмотра изображения\r\nconst viewCardPopup = document.querySelector(\".popup_type_image\");\r\nconst viewCardImage = viewCardPopup.querySelector(\".popup__image\");\r\nconst viewCardCaption = viewCardPopup.querySelector(\".popup__caption\");\r\n\r\nconst confirmationPopup = document.querySelector(\".popup_type_confirm\");\r\nconst confirmDeletionForm = confirmationPopup.querySelector(\".popup__form\");\r\n// Кнопки\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\nconst editAvatar = document.querySelector(\".profile__image\");\r\n\r\nconst config = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nlet currentUser = null;\r\nlet idCardForDelete = null;\r\nlet cardForDelete = null;\r\n\r\npopups.forEach((popup) => setPopupEventListeners(popup));\r\n\r\nPromise.all([getInitialCards(), getProfileInfo()])\r\n  .then((res) => {\r\n    const [cards, userInfo] = res;\r\n    currentUser = userInfo._id;\r\n    renderInitialCards(cards);\r\n    setProfileInfo(userInfo);\r\n  })\r\n  .catch((err) => console.log(err));\r\n\r\nconst setProfileInfo = (user) => {\r\n  const { name, about, avatar } = user;\r\n  profileName.textContent = name;\r\n  profileDescription.textContent = about;\r\n  editAvatar.style.backgroundImage = `url(${avatar})`;\r\n};\r\n\r\n// Заполнить поля формы информацией из профиля\r\nconst fillPopupInputs = () => {\r\n  profileNameInput.value = profileName.textContent;\r\n  profileDescriptionInput.value = profileDescription.textContent;\r\n};\r\n\r\n// Открытие попапа удаления карточки\r\nconst openConfirmationPopup = (id, card) => {\r\n  openPopup(confirmationPopup);\r\n  idCardForDelete = id;\r\n  cardForDelete = card;\r\n};\r\n\r\n// Редактировать профиль\r\nconst handleProfileFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  const name = profileNameInput.value;\r\n  const about = profileDescriptionInput.value;\r\n  isLoading(true, saveProfileInfoButton);\r\n  updateProfileInfo(name, about)\r\n    .then((user) => {\r\n      const { name, about } = user;\r\n      profileName.textContent = name;\r\n      profileDescription.textContent = about;\r\n      closePopup(editProfilePopup);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => isLoading(false, saveProfileInfoButton));\r\n};\r\n\r\n// Добавить новую карточку на страницу\r\nconst handleCardFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  const name = cardNameInput.value;\r\n  const link = cardLinkInput.value;\r\n  isLoading(true, saveCardButton);\r\n  uploadNewCard(name, link)\r\n    .then((card) => {\r\n      cardsContainer.prepend(renderCard(card));\r\n      closePopup(addCardPopup);\r\n      clearValidation(addCardForm, config);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => isLoading(false, saveCardButton));\r\n};\r\n\r\n// Редактировать аватар\r\nconst handleAvatarFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  const avatar = avatarInput.value;\r\n  isLoading(true, saveAvatarButton);\r\n  updateProfileAvatar(avatar)\r\n    .then((user) => {\r\n      const { avatar } = user;\r\n      editAvatar.style.backgroundImage = `url(${avatar})`;\r\n      closePopup(editAvatarPopup);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => isLoading(false, saveAvatarButton));\r\n};\r\n\r\n// Удаление карточки\r\nconst handleDeleteCard = (e) => {\r\n  e.preventDefault();\r\n  removeCard(idCardForDelete)\r\n    .then(() => {\r\n      deleteCard(cardForDelete);\r\n      closePopup(confirmationPopup);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n// Открыть изображение для просмотра\r\nconst openImagePopup = (card) => {\r\n  const { name, link } = card;\r\n  viewCardImage.src = link;\r\n  viewCardCaption.alt = name;\r\n  viewCardCaption.textContent = name;\r\n  openPopup(viewCardPopup);\r\n};\r\n\r\n// Отрисовать карточку\r\nconst renderCard = (card) => {\r\n  return createCard(\r\n    card,\r\n    currentUser,\r\n    openConfirmationPopup,\r\n    toggleLike,\r\n    openImagePopup\r\n  );\r\n};\r\n\r\n// @todo: Вывести все карточки на страницу\r\nconst renderInitialCards = (itemList) => {\r\n  itemList.forEach((card) => cardsContainer.append(renderCard(card)));\r\n};\r\n\r\nenableValidation(config);\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  clearValidation(editProfileForm, config);\r\n  openPopup(editProfilePopup);\r\n  fillPopupInputs();\r\n});\r\naddButton.addEventListener(\"click\", () => {\r\n  openPopup(addCardPopup);\r\n});\r\n\r\neditAvatar.addEventListener(\"click\", () => {\r\n  clearValidation(editAvatarForm, config);\r\n  openPopup(editAvatarPopup);\r\n});\r\n\r\naddCardForm.addEventListener(\"submit\", handleCardFormSubmit);\r\neditProfileForm.addEventListener(\"submit\", handleProfileFormSubmit);\r\neditAvatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\r\nconfirmDeletionForm.addEventListener(\"submit\", handleDeleteCard);\r\n"],"names":["popupIsOpen","closePopupEsc","e","key","popup","document","querySelector","concat","closePopup","openPopup","classList","add","addEventListener","remove","removeEventListener","config","baseUrl","headers","authorization","checkResponseStatus","res","ok","json","Promise","reject","status","cardTemplate","content","toggleLike","id","likes","button","cardId","isLiked","contains","fetch","method","then","card","textContent","length","toggle","catch","err","console","log","hideInputError","formElement","inputElement","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","removeAttribute","setAttribute","clearValidation","Array","from","querySelectorAll","inputSelector","reset","submitButtonSelector","forEach","isLoading","loading","popups","cardsContainer","profileName","profileDescription","editAvatarPopup","editAvatarForm","avatarInput","saveAvatarButton","editProfilePopup","editProfileForm","profileNameInput","profileDescriptionInput","saveProfileInfoButton","addCardPopup","addCardForm","cardNameInput","cardLinkInput","saveCardButton","viewCardPopup","viewCardImage","viewCardCaption","confirmationPopup","confirmDeletionForm","editButton","addButton","editAvatar","formSelector","currentUser","idCardForDelete","cardForDelete","target","currentTarget","setPopupEventListeners","all","_res","cards","userInfo","_id","renderInitialCards","setProfileInfo","user","name","about","avatar","style","backgroundImage","openConfirmationPopup","openImagePopup","link","src","alt","renderCard","userId","handleDeleteCard","handleLikeCard","handleOpenCard","owner","cardElement","cloneNode","imageElement","titleElement","deleteButton","likeButton","totalCardLikes","createCard","itemList","append","preventDefault","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListener","enableValidation","value","body","JSON","stringify","uploadNewCard","prepend","finally","updateProfileInfo","updateProfileAvatar"],"sourceRoot":""}