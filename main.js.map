{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/utils/constants.js","webpack://mesto-project-ff/./src/utils/configs.js","webpack://mesto-project-ff/./src/utils/helpers.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["\r\n// @todo: DOM узлы\r\nexport const popups = document.querySelectorAll(\".popup\");\r\nexport const cardsContainer = document.querySelector(\".places__list\");\r\nexport const profileName = document.querySelector(\".profile__title\");\r\nexport const profileDescription = document.querySelector(\".profile__description\");\r\n// Элементы модального окна для редактирования аватара\r\nexport const editAvatarPopup = document.querySelector(\".popup_type_avatar\");\r\nexport const editAvatarForm = editAvatarPopup.querySelector(\".popup__form\");\r\nexport const avatarInput = editAvatarPopup.querySelector(\".popup__input_type_avatar\");\r\nexport const saveAvatarButton = editAvatarPopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для редактирования профиля\r\nexport const editProfilePopup = document.querySelector(\".popup_type_edit\");\r\nexport const editProfileForm = editProfilePopup.querySelector(\".popup__form\");\r\nexport const profileNameInput = editProfilePopup.querySelector(\r\n  \".popup__input_type_name\"\r\n);\r\nexport const profileDescriptionInput = editProfilePopup.querySelector(\r\n  \".popup__input_type_description\"\r\n);\r\nexport const saveProfileInfoButton = editProfilePopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для добавления новой карточки\r\nexport const addCardPopup = document.querySelector(\".popup_type_new-card\");\r\nexport const addCardForm = addCardPopup.querySelector(\".popup__form\");\r\nexport const cardNameInput = addCardPopup.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nexport const cardLinkInput = addCardPopup.querySelector(\".popup__input_type_url\");\r\nexport const saveCardButton = addCardPopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для просмотра изображения\r\nexport const viewCardPopup = document.querySelector(\".popup_type_image\");\r\nexport const viewCardImage = viewCardPopup.querySelector(\".popup__image\");\r\nexport const viewCardCaption = viewCardPopup.querySelector(\".popup__caption\");\r\n\r\nexport const confirmationPopup = document.querySelector(\".popup_type_confirm\");\r\nexport const confirmDeletionForm = confirmationPopup.querySelector(\".popup__form\");\r\n// Кнопки\r\nexport const editButton = document.querySelector(\".profile__edit-button\");\r\nexport const addButton = document.querySelector(\".profile__add-button\");\r\nexport const editAvatar = document.querySelector(\".profile__image\");","export const validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nexport const loadingStatus = {\r\n  loading: \"Сохранение...\",\r\n  load: \"Сохранить\",\r\n}\r\n\r\nexport const errorStatus = {\r\n  error: \"Что то пошло не так... Повторите попытку позже\",\r\n  success: \"\",\r\n}","import { loadingStatus, errorStatus } from \"./configs\";\r\n\r\nconst isLoading = (loading, button) => {\r\n  loading\r\n    ? (button.textContent = loadingStatus.loading)\r\n    : (button.textContent = loadingStatus.load);\r\n};\r\n\r\nconst showSubmitError = (error, popup) => {\r\n  const element = popup.querySelector(\".popup__form-error\");\r\n  error\r\n    ? (element.textContent = errorStatus.error)\r\n    : (element.textContent = errorStatus.success);\r\n};\r\n\r\nexport { isLoading, showSubmitError };\r\n","const popupIsOpen = \"popup_is-opened\";\r\nimport { showSubmitError } from \"../utils/helpers\";\r\n\r\n// Закрытие модального окна нажатием на Esc\r\nconst closePopupEsc = (e) => {\r\n  if (e.key === \"Escape\") {\r\n    const popup = document.querySelector(`.${popupIsOpen}`);\r\n    closePopup(popup);\r\n  }\r\n  return;\r\n};\r\n\r\n// Открытие модального окна\r\nconst openPopup = (popup) => {\r\n  popup.classList.add(popupIsOpen);\r\n  document.addEventListener(\"keydown\", closePopupEsc);\r\n  showSubmitError(false, popup);\r\n};\r\n\r\n// Закрытие модального окна\r\nconst closePopup = (popup) => {\r\n  popup.classList.remove(popupIsOpen);\r\n  document.removeEventListener(\"keydown\", closePopupEsc);\r\n};\r\n\r\n// Логика обработки событий модального окна\r\nconst setPopupEventListeners = (popup) => {\r\n  // Добавить класс анимации на модальные окна\r\n  popup.classList.add(\"popup_is-animated\");\r\n  popup.addEventListener(\"click\", (e) => {\r\n    if (\r\n      e.target.classList.contains(\"popup__close\") ||\r\n      e.target === e.currentTarget\r\n    ) {\r\n      closePopup(popup);\r\n    }\r\n  });\r\n};\r\n\r\nexport { openPopup, closePopup, setPopupEventListeners };\r\n","const BASE_URL = \"https://nomoreparties.co/v1/\";\r\nconst COHORT_ID = \"wff-cohort-38\";\r\nconst TOKEN = \"9503a300-d1d2-40fa-93bf-3f548ff8c496\";\r\n\r\nconst config = {\r\n  baseUrl: `${BASE_URL}${COHORT_ID}`,\r\n  headers: {\r\n    authorization: TOKEN,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst { baseUrl, headers } = config;\r\n\r\nconst checkResponseStatus = (res) => {\r\n  if(res.ok) {\r\n    return res.json()\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`)\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${baseUrl}/cards`, {\r\n    headers,\r\n  }).then(checkResponseStatus);\r\n};\r\n\r\nexport const getProfileInfo = () => {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    headers,\r\n  }).then(checkResponseStatus);\r\n};\r\n\r\nexport const updateProfileInfo = (name, about) => {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      about\r\n    })\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const updateProfileAvatar = (avatar) => {\r\n  return fetch(`${baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({\r\n      avatar,\r\n    })\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const uploadNewCard = (name, link) => {\r\n  return fetch(`${baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      link,\r\n    })\r\n  })\r\n  .then(checkResponseStatus)\r\n}\r\n\r\nexport const removeCard = (cardId) => {\r\n  return fetch(`${baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers,\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const likeCard = (cardId, isLiked) => {\r\n  return fetch(`${baseUrl}/cards/likes/${cardId}`, {\r\n    method: isLiked ? 'DELETE' : 'PUT',\r\n    headers,\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n","import { likeCard } from \"../components/api\";\r\n// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\nconst createCard = (\r\n  card,\r\n  userId,\r\n  handleDeleteCard,\r\n  handleLikeCard,\r\n  handleOpenCard\r\n) => {\r\n  const { name, link, likes, owner, _id } = card;\r\n\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const imageElement = cardElement.querySelector(\".card__image\");\r\n  const titleElement = cardElement.querySelector(\".card__title\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n  const totalCardLikes = cardElement.querySelector(\".card__like-number\");\r\n\r\n  imageElement.src = link;\r\n  imageElement.alt = name;\r\n  titleElement.textContent = name;\r\n  totalCardLikes.textContent = likes.length;\r\n\r\n  const isLiked = likes.some((user) => user._id === userId);\r\n  if (isLiked) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  if (userId !== owner._id) {\r\n    deleteButton.remove();\r\n  } else {\r\n    deleteButton.addEventListener(\"click\", () =>\r\n      handleDeleteCard(_id, cardElement)\r\n    );\r\n  }\r\n\r\n  likeButton.addEventListener(\"click\", () =>\r\n    handleLikeCard(_id, totalCardLikes, likeButton)\r\n  );\r\n\r\n  imageElement.addEventListener(\"click\", () => handleOpenCard(card));\r\n\r\n  return cardElement;\r\n};\r\n\r\n// Удаление карточки из разметки\r\nconst deleteCard = (card) => {\r\n  card.remove()\r\n}\r\n\r\n// @todo: Функция постановки лайка карточке\r\nconst toggleLike = (id, likes, button) => {\r\n  const isLiked = button.classList.contains(\"card__like-button_is-active\")\r\n  likeCard(id, isLiked).then((card) => {\r\n    likes.textContent = card.likes.length;\r\n    button.classList.toggle(\"card__like-button_is-active\");\r\n  })\r\n  .catch(err => console.log(err))\r\n};\r\n\r\n\r\nexport { createCard, toggleLike, deleteCard };\r\n","const showInputError = (formElement, inputElement, errorMessage, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(config.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.remove(config.errorClass);\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, config) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      config\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, config) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(config.inactiveButtonClass);\r\n    buttonElement.setAttribute(\"disabled\", true);\r\n  } else {\r\n    buttonElement.classList.remove(config.inactiveButtonClass);\r\n    buttonElement.removeAttribute(\"disabled\");\r\n  }\r\n};\r\n\r\nconst setEventListener = (formElement, config) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, config);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      checkInputValidity(formElement, inputElement, config);\r\n      toggleButtonState(inputList, buttonElement, config);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (config) => {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n    setEventListener(formElement, config);\r\n  });\r\n};\r\n\r\nexport const clearValidation = (formElement, config) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  formElement.reset();\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, config);\r\n    toggleButtonState(inputList, buttonElement, config);\r\n  });\r\n};\r\n","import \"./pages/index.css\";\r\nimport * as domNodes from \"./utils/constants\";\r\nimport { validationConfig as config } from \"./utils/configs\";\r\nimport {\r\n  openPopup,\r\n  closePopup,\r\n  setPopupEventListeners,\r\n} from \"./components/modal\";\r\nimport { createCard, toggleLike, deleteCard } from \"./components/card\";\r\nimport { clearValidation, enableValidation } from \"./components/validation\";\r\nimport {\r\n  getInitialCards,\r\n  getProfileInfo,\r\n  updateProfileInfo,\r\n  uploadNewCard,\r\n  updateProfileAvatar,\r\n  removeCard,\r\n} from \"./components/api\";\r\nimport { isLoading, showSubmitError } from \"./utils/helpers\";\r\n\r\nconst {\r\n  popups,\r\n  cardsContainer,\r\n  profileName,\r\n  profileDescription,\r\n  editAvatarPopup,\r\n  editAvatarForm,\r\n  avatarInput,\r\n  saveAvatarButton,\r\n  editProfilePopup,\r\n  editProfileForm,\r\n  profileNameInput,\r\n  profileDescriptionInput,\r\n  saveProfileInfoButton,\r\n  addCardPopup,\r\n  addCardForm,\r\n  cardNameInput,\r\n  cardLinkInput,\r\n  saveCardButton,\r\n  viewCardPopup,\r\n  viewCardImage,\r\n  viewCardCaption,\r\n  confirmationPopup,\r\n  confirmDeletionForm,\r\n  editButton,\r\n  addButton,\r\n  editAvatar,\r\n} = domNodes;\r\n\r\nlet currentUser = null;\r\nlet idCardForDelete = null;\r\nlet cardForDelete = null;\r\n\r\npopups.forEach((popup) => setPopupEventListeners(popup));\r\n\r\nPromise.all([getInitialCards(), getProfileInfo()])\r\n  .then((res) => {\r\n    const [cards, userInfo] = res;\r\n    currentUser = userInfo._id;\r\n    renderInitialCards(cards);\r\n    setProfileInfo(userInfo);\r\n  })\r\n  .catch((err) => console.log(err));\r\n\r\nconst setProfileInfo = (user) => {\r\n  const { name, about, avatar } = user;\r\n  profileName.textContent = name;\r\n  profileDescription.textContent = about;\r\n  editAvatar.style.backgroundImage = `url(${avatar})`;\r\n};\r\n\r\n// Заполнить поля формы информацией из профиля\r\nconst fillPopupInputs = () => {\r\n  profileNameInput.value = profileName.textContent;\r\n  profileDescriptionInput.value = profileDescription.textContent;\r\n};\r\n\r\n// Открытие попапа удаления карточки\r\nconst openConfirmationPopup = (id, card) => {\r\n  openPopup(confirmationPopup);\r\n  idCardForDelete = id;\r\n  cardForDelete = card;\r\n};\r\n\r\n// Редактировать профиль\r\nconst handleProfileFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  const name = profileNameInput.value;\r\n  const about = profileDescriptionInput.value;\r\n  isLoading(true, saveProfileInfoButton);\r\n  updateProfileInfo(name, about)\r\n    .then((user) => {\r\n      const { name, about } = user;\r\n      profileName.textContent = name;\r\n      profileDescription.textContent = about;\r\n      closePopup(editProfilePopup);\r\n    })\r\n    .catch((err) => {\r\n      showSubmitError(true, editProfilePopup);\r\n      console.log(err);\r\n    })\r\n    .finally(() => isLoading(false, saveProfileInfoButton));\r\n};\r\n\r\n// Добавить новую карточку на страницу\r\nconst handleCardFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  const name = cardNameInput.value;\r\n  const link = cardLinkInput.value;\r\n  isLoading(true, saveCardButton);\r\n  uploadNewCard(name, link)\r\n    .then((card) => {\r\n      cardsContainer.prepend(renderCard(card));\r\n      closePopup(addCardPopup);\r\n    })\r\n    .catch((err) => {\r\n      showSubmitError(true, addCardPopup);\r\n      console.log(err);\r\n    })\r\n    .finally(() => isLoading(false, saveCardButton));\r\n};\r\n\r\n// Редактировать аватар\r\nconst handleAvatarFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  const avatar = avatarInput.value;\r\n  isLoading(true, saveAvatarButton);\r\n  updateProfileAvatar(avatar)\r\n    .then((user) => {\r\n      const { avatar } = user;\r\n      editAvatar.style.backgroundImage = `url(${avatar})`;\r\n      closePopup(editAvatarPopup);\r\n    })\r\n    .catch((err) => {\r\n      showSubmitError(true, editAvatarPopup);\r\n      console.log(err);\r\n    })\r\n    .finally(() => isLoading(false, saveAvatarButton));\r\n};\r\n\r\n// Удаление карточки\r\nconst handleDeleteCard = (e) => {\r\n  e.preventDefault();\r\n  removeCard(idCardForDelete)\r\n    .then(() => {\r\n      deleteCard(cardForDelete);\r\n      closePopup(confirmationPopup);\r\n    })\r\n    .catch((err) => {\r\n      showSubmitError(true, confirmationPopup);\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// Открыть изображение для просмотра\r\nconst openImagePopup = (card) => {\r\n  const { name, link } = card;\r\n  viewCardImage.src = link;\r\n  viewCardCaption.alt = name;\r\n  viewCardCaption.textContent = name;\r\n  openPopup(viewCardPopup);\r\n};\r\n\r\n// Отрисовать карточку\r\nconst renderCard = (card) => {\r\n  return createCard(\r\n    card,\r\n    currentUser,\r\n    openConfirmationPopup,\r\n    toggleLike,\r\n    openImagePopup\r\n  );\r\n};\r\n\r\n// @todo: Вывести все карточки на страницу\r\nconst renderInitialCards = (itemList) => {\r\n  itemList.forEach((card) => cardsContainer.append(renderCard(card)));\r\n};\r\n\r\nenableValidation(config);\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  clearValidation(editProfileForm, config);\r\n  openPopup(editProfilePopup);\r\n  fillPopupInputs();\r\n});\r\naddButton.addEventListener(\"click\", () => {\r\n  clearValidation(addCardForm, config);\r\n  openPopup(addCardPopup);\r\n});\r\n\r\neditAvatar.addEventListener(\"click\", () => {\r\n  clearValidation(editAvatarForm, config);\r\n  openPopup(editAvatarPopup);\r\n});\r\n\r\naddCardForm.addEventListener(\"submit\", handleCardFormSubmit);\r\neditProfileForm.addEventListener(\"submit\", handleProfileFormSubmit);\r\neditAvatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\r\nconfirmDeletionForm.addEventListener(\"submit\", handleDeleteCard);\r\n"],"names":["popups","document","querySelectorAll","cardsContainer","querySelector","profileName","profileDescription","editAvatarPopup","editAvatarForm","avatarInput","saveAvatarButton","editProfilePopup","editProfileForm","profileNameInput","profileDescriptionInput","saveProfileInfoButton","addCardPopup","addCardForm","cardNameInput","cardLinkInput","saveCardButton","viewCardPopup","viewCardImage","viewCardCaption","confirmationPopup","confirmDeletionForm","editButton","addButton","editAvatar","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","isLoading","loading","button","textContent","showSubmitError","error","popup","popupIsOpen","closePopupEsc","e","key","concat","closePopup","openPopup","classList","add","addEventListener","remove","removeEventListener","config","baseUrl","headers","authorization","checkResponseStatus","res","ok","json","Promise","reject","status","cardTemplate","content","toggleLike","id","likes","cardId","isLiked","contains","fetch","method","then","card","length","toggle","catch","err","console","log","hideInputError","formElement","inputElement","errorElement","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","removeAttribute","setAttribute","clearValidation","Array","from","reset","forEach","domNodes","currentUser","idCardForDelete","cardForDelete","target","currentTarget","setPopupEventListeners","all","_res","cards","userInfo","_id","renderInitialCards","setProfileInfo","user","name","about","avatar","style","backgroundImage","openConfirmationPopup","openImagePopup","link","src","alt","renderCard","userId","handleDeleteCard","handleLikeCard","handleOpenCard","owner","cardElement","cloneNode","imageElement","titleElement","deleteButton","likeButton","totalCardLikes","createCard","itemList","append","preventDefault","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListener","enableValidation","value","body","JSON","stringify","uploadNewCard","prepend","finally","updateProfileInfo","updateProfileAvatar"],"sourceRoot":""}