{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const popupIsOpen = \"popup_is-opened\";\r\n\r\n// Закрытие модального окна нажатием на Esc\r\nconst closePopupEsc = (e) => {\r\n  if (e.key === \"Escape\") {\r\n    const popup = document.querySelector(`.${popupIsOpen}`);\r\n    closePopup(popup);\r\n  }\r\n  return;\r\n};\r\n\r\n// Открытие модального окна\r\nconst openPopup = (popup) => {\r\n  popup.classList.add(popupIsOpen);\r\n  document.addEventListener(\"keydown\", closePopupEsc);\r\n};\r\n\r\n// Закрытие модального окна\r\nconst closePopup = (popup) => {\r\n  popup.classList.remove(popupIsOpen);\r\n  document.removeEventListener(\"keydown\", closePopupEsc);\r\n};\r\n\r\n// Логика обработки событий модального окна\r\nconst setPopupEventListeners = (popup) => {\r\n// Добавить класс анимации на модальные окна\r\n  popup.classList.add(\"popup_is-animated\");\r\n  popup.addEventListener(\"click\", (e) => {\r\n    if (\r\n      e.target.classList.contains(\"popup__close\") ||\r\n      e.target === e.currentTarget\r\n    ) {\r\n      closePopup(popup);\r\n    }\r\n  });\r\n};\r\n\r\nexport { openPopup, closePopup, setPopupEventListeners };\r\n","const BASE_URL = \"https://nomoreparties.co/v1/\";\r\nconst COHORT_ID = \"wff-cohort-38\";\r\nconst TOKEN = \"9503a300-d1d2-40fa-93bf-3f548ff8c496\";\r\n\r\nconst config = {\r\n  baseUrl: `${BASE_URL}${COHORT_ID}`,\r\n  headers: {\r\n    authorization: TOKEN,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst { baseUrl, headers } = config;\r\n\r\nconst checkResponseStatus = (res) => {\r\n  if(res.ok) {\r\n    return res.json()\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`)\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${baseUrl}/cards`, {\r\n    headers,\r\n  }).then(checkResponseStatus);\r\n};\r\n\r\nexport const getProfileInfo = () => {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    headers,\r\n  }).then(checkResponseStatus);\r\n};\r\n\r\nexport const updateProfileInfo = (name, about) => {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      about\r\n    })\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const updateProfileAvatar = (avatar) => {\r\n  return fetch(`${baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({\r\n      avatar,\r\n    })\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const uploadNewCard = (name, link) => {\r\n  return fetch(`${baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      link,\r\n    })\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const removeCard = (cardId) => {\r\n  return fetch(`${baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers,\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n\r\nexport const likeCard = (cardId, isLiked) => {\r\n  return fetch(`${baseUrl}/cards/likes/${cardId}`, {\r\n    method: isLiked ? 'DELETE' : 'PUT',\r\n    headers,\r\n  })\r\n  .then(checkResponseStatus);\r\n}\r\n","import { likeCard } from \"../components/api\";\r\n// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\nconst createCard = (\r\n  card,\r\n  userId,\r\n  handleDeleteCard,\r\n  handleLikeCard,\r\n  handleOpenCard\r\n) => {\r\n  const { name, link, likes, owner, _id } = card;\r\n\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const imageElement = cardElement.querySelector(\".card__image\");\r\n  const titleElement = cardElement.querySelector(\".card__title\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n  const totalCardLikes = cardElement.querySelector(\".card__like-number\");\r\n\r\n  imageElement.src = link;\r\n  imageElement.alt = name;\r\n  titleElement.textContent = name;\r\n  totalCardLikes.textContent = likes.length;\r\n\r\n  const isLiked = likes.some((user) => user._id === userId);\r\n  if (isLiked) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  if (userId !== owner._id) {\r\n    deleteButton.remove();\r\n  } else {\r\n    deleteButton.addEventListener(\"click\", () =>\r\n      handleDeleteCard(_id, cardElement)\r\n    );\r\n  }\r\n\r\n  likeButton.addEventListener(\"click\", () =>\r\n    handleLikeCard(_id, totalCardLikes, likeButton)\r\n  );\r\n\r\n  imageElement.addEventListener(\"click\", () => handleOpenCard(card));\r\n\r\n  return cardElement;\r\n};\r\n\r\n// @todo: Функция постановки лайка карточке\r\nconst toggleLike = (id, likes, button) => {\r\n  const isLiked = button.classList.contains(\"card__like-button_is-active\")\r\n  likeCard(id, isLiked).then((card) => {\r\n    likes.textContent = card.likes.length;\r\n    button.classList.toggle(\"card__like-button_is-active\");\r\n  });\r\n};\r\n\r\n\r\nexport { createCard, toggleLike };\r\n","const showInputError = (formElement, inputElement, errorMessage, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(config.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.remove(config.errorClass);\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, config) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      config\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, config) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(config.inactiveButtonClass);\r\n    buttonElement.setAttribute(\"disabled\", true);\r\n  } else {\r\n    buttonElement.classList.remove(config.inactiveButtonClass);\r\n    buttonElement.removeAttribute(\"disabled\");\r\n  }\r\n};\r\n\r\nconst setEventListener = (formElement, config) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, config);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      checkInputValidity(formElement, inputElement, config);\r\n      toggleButtonState(inputList, buttonElement, config);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (config) => {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n    setEventListener(formElement, config);\r\n  });\r\n};\r\n\r\nexport const clearValidation = (formElement, config) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(config.inputSelector)\r\n  );\r\n  formElement.reset();\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, config);\r\n    toggleButtonState(inputList, buttonElement, config);\r\n  });\r\n};\r\n","import \"./pages/index.css\";\r\nimport {\r\n  openPopup,\r\n  closePopup,\r\n  setPopupEventListeners,\r\n} from \"./components/modal\";\r\nimport { createCard, toggleLike } from \"./components/card\";\r\nimport { clearValidation, enableValidation } from \"./components/validation\";\r\nimport {\r\n  getInitialCards,\r\n  getProfileInfo,\r\n  updateProfileInfo,\r\n  uploadNewCard,\r\n  updateProfileAvatar,\r\n  removeCard,\r\n} from \"./components/api\";\r\n\r\n// @todo: DOM узлы\r\nconst popups = document.querySelectorAll(\".popup\");\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\n// Элементы модального окна для редактирования аватара\r\nconst editAvatarPopup = document.querySelector(\".popup_type_avatar\");\r\nconst editAvatarForm = editAvatarPopup.querySelector(\".popup__form\");\r\nconst avatarInput = editAvatarPopup.querySelector(\".popup__input_type_avatar\");\r\nconst saveAvatarButton = editAvatarPopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для редактирования профиля\r\nconst editProfilePopup = document.querySelector(\".popup_type_edit\");\r\nconst editProfileForm = editProfilePopup.querySelector(\".popup__form\");\r\nconst profileNameInput = editProfilePopup.querySelector(\r\n  \".popup__input_type_name\"\r\n);\r\nconst profileDescriptionInput = editProfilePopup.querySelector(\r\n  \".popup__input_type_description\"\r\n);\r\nconst saveProfileInfoButton = editProfilePopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для добавления новой карточки\r\nconst addCardPopup = document.querySelector(\".popup_type_new-card\");\r\nconst addCardForm = addCardPopup.querySelector(\".popup__form\");\r\nconst cardNameInput = addCardPopup.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nconst cardLinkInput = addCardPopup.querySelector(\".popup__input_type_url\");\r\nconst saveCardButton = addCardPopup.querySelector(\".popup__button\");\r\n// Элементы модального окна для просмотра изображения\r\nconst viewCardPopup = document.querySelector(\".popup_type_image\");\r\nconst viewCardImage = viewCardPopup.querySelector(\".popup__image\");\r\nconst viewCardCaption = viewCardPopup.querySelector(\".popup__caption\");\r\n\r\nconst confirmationPopup = document.querySelector(\".popup_type_confirm\");\r\nconst confirmDeletionForm = confirmationPopup.querySelector(\".popup__form\");\r\n// Кнопки\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\nconst editAvatar = document.querySelector(\".profile__image\");\r\n\r\nconst config = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nlet currentUser = null;\r\nlet idCardForDelete = null;\r\nlet cardForDelete = null;\r\n\r\npopups.forEach((popup) => setPopupEventListeners(popup));\r\n\r\nconst isLoading = (loading, button) => {\r\n  loading\r\n    ? (button.textContent = \"Сохранение...\")\r\n    : (button.textContent = \"Сохранение\");\r\n};\r\n\r\nPromise.all([getInitialCards(), getProfileInfo()])\r\n  .then((res) => {\r\n    const [cards, userInfo] = res;\r\n    currentUser = userInfo._id;\r\n    renderInitialCards(cards);\r\n    setProfileInfo(userInfo);\r\n  })\r\n  .catch((err) => console.log(err));\r\n\r\nconst setProfileInfo = (user) => {\r\n  const { name, about, avatar } = user;\r\n  profileName.textContent = name;\r\n  profileDescription.textContent = about;\r\n  editAvatar.style.backgroundImage = `url(${avatar})`;\r\n};\r\n\r\n// Заполнить поля формы информацией из профиля\r\nconst fillPopupInputs = () => {\r\n  profileNameInput.value = profileName.textContent;\r\n  profileDescriptionInput.value = profileDescription.textContent;\r\n};\r\n\r\n// Добавить новую карточку на страницу\r\nconst addNewCard = () => {\r\n  const name = cardNameInput.value;\r\n  const link = cardLinkInput.value;\r\n  isLoading(true, saveCardButton);\r\n  uploadNewCard(name, link)\r\n    .then((card) => {\r\n      cardsContainer.prepend(renderCard(card));\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => isLoading(false, saveCardButton));\r\n};\r\n\r\n// Редактировать профиль\r\nconst updateProfile = () => {\r\n  const name = profileNameInput.value;\r\n  const about = profileDescriptionInput.value;\r\n  isLoading(true, saveProfileInfoButton);\r\n  updateProfileInfo(name, about)\r\n    .then((user) => {\r\n      const { name, about } = user;\r\n      profileName.textContent = name;\r\n      profileDescription.textContent = about;\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => isLoading(false, saveProfileInfoButton));\r\n};\r\n\r\n// Редактировать аватар\r\nconst updateAvatar = () => {\r\n  const avatar = avatarInput.value;\r\n  isLoading(true, saveAvatarButton);\r\n  updateProfileAvatar(avatar)\r\n    .then((user) => {\r\n      const { avatar } = user;\r\n      editAvatar.style.backgroundImage = `url(${avatar})`;\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => isLoading(false, saveAvatarButton));\r\n};\r\n\r\n// Удаление карточки\r\nconst deleteCard = () => {\r\n  removeCard(idCardForDelete)\r\n    .then(() => cardForDelete.remove())\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n// Открытие попапа удаления карточки\r\nconst openConfirmationPopup = (id, card) => {\r\n  openPopup(confirmationPopup);\r\n  idCardForDelete = id;\r\n  cardForDelete = card;\r\n};\r\n\r\n// Обработчики «отправки» форм\r\nconst handleProfileFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  updateProfile();\r\n  closePopup(editProfilePopup);\r\n};\r\n\r\nconst handleCardFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  addNewCard();\r\n  closePopup(addCardPopup);\r\n};\r\n\r\nconst handleAvatarFormSubmit = (e) => {\r\n  e.preventDefault();\r\n  updateAvatar();\r\n  closePopup(editAvatarPopup);\r\n};\r\n\r\nconst handleDeleteCard = (e) => {\r\n  e.preventDefault();\r\n  deleteCard();\r\n  closePopup(confirmationPopup);\r\n};\r\n\r\n// Открыть изображение для просмотра\r\nconst openImagePopup = (card) => {\r\n  const { name, link } = card;\r\n  viewCardImage.src = link;\r\n  viewCardCaption.alt = name;\r\n  viewCardCaption.textContent = name;\r\n  openPopup(viewCardPopup);\r\n};\r\n\r\n// Отрисовать карточку\r\nconst renderCard = (card) => {\r\n  return createCard(\r\n    card,\r\n    currentUser,\r\n    openConfirmationPopup,\r\n    toggleLike,\r\n    openImagePopup\r\n  );\r\n};\r\n\r\n// @todo: Вывести все карточки на страницу\r\nconst renderInitialCards = (itemList) => {\r\n  itemList.forEach((card) => cardsContainer.append(renderCard(card)));\r\n};\r\n\r\nenableValidation(config);\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  clearValidation(editProfileForm, config);\r\n  openPopup(editProfilePopup);\r\n  fillPopupInputs();\r\n});\r\naddButton.addEventListener(\"click\", () => {\r\n  clearValidation(addCardForm, config);\r\n  openPopup(addCardPopup);\r\n});\r\n\r\neditAvatar.addEventListener(\"click\", () => {\r\n  clearValidation(editAvatarForm, config);\r\n  openPopup(editAvatarPopup);\r\n});\r\n\r\naddCardForm.addEventListener(\"submit\", handleCardFormSubmit);\r\neditProfileForm.addEventListener(\"submit\", handleProfileFormSubmit);\r\neditAvatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\r\nconfirmDeletionForm.addEventListener(\"submit\", handleDeleteCard);\r\n"],"names":["popupIsOpen","closePopupEsc","e","key","popup","document","querySelector","concat","closePopup","openPopup","classList","add","addEventListener","remove","removeEventListener","config","baseUrl","headers","authorization","checkResponseStatus","res","ok","json","Promise","reject","status","cardTemplate","content","toggleLike","id","likes","button","cardId","isLiked","contains","fetch","method","then","card","textContent","length","toggle","hideInputError","formElement","inputElement","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","removeAttribute","setAttribute","clearValidation","Array","from","querySelectorAll","inputSelector","reset","submitButtonSelector","forEach","popups","cardsContainer","profileName","profileDescription","editAvatarPopup","editAvatarForm","avatarInput","saveAvatarButton","editProfilePopup","editProfileForm","profileNameInput","profileDescriptionInput","saveProfileInfoButton","addCardPopup","addCardForm","cardNameInput","cardLinkInput","saveCardButton","viewCardPopup","viewCardImage","viewCardCaption","confirmationPopup","confirmDeletionForm","editButton","addButton","editAvatar","formSelector","currentUser","idCardForDelete","cardForDelete","target","currentTarget","setPopupEventListeners","isLoading","loading","all","_res","cards","userInfo","_id","renderInitialCards","setProfileInfo","catch","err","console","log","user","name","about","avatar","style","backgroundImage","openConfirmationPopup","openImagePopup","link","src","alt","renderCard","userId","handleDeleteCard","handleLikeCard","handleOpenCard","owner","cardElement","cloneNode","imageElement","titleElement","deleteButton","likeButton","totalCardLikes","createCard","itemList","append","preventDefault","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListener","enableValidation","value","body","JSON","stringify","uploadNewCard","prepend","finally","updateProfileInfo","updateProfileAvatar"],"sourceRoot":""}